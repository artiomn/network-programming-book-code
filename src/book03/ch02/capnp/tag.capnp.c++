// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: tag.capnp

#include "tag.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<92> b_93ec636d3aa9ee4a = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     74, 238, 169,  58, 109,  99, 236, 147,
     25,   0,   0,   0,   1,   0,   5,   0,
     37, 117,  16,  79, 174, 174, 211, 190,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 234,   0,   0,   0,
     33,   0,   0,   0,  23,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  31,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 114,  99,  47,  99, 104,  49,  52,
     47,  99,  97, 112, 110, 112,  47, 116,
     97, 103,  46,  99,  97, 112, 110, 112,
     58,  84,  97, 103,   0,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
     82,  92, 250, 161,   9,   0, 167, 235,
      1,   0,   0,   0,  42,   0,   0,   0,
     84, 121, 112, 101,   0,   0,   0,   0,
     20,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    125,   0,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    120,   0,   0,   0,   3,   0,   1,   0,
    132,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    129,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    128,   0,   0,   0,   3,   0,   1,   0,
    140,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    137,   0,   0,   0, 114,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    136,   0,   0,   0,   3,   0,   1,   0,
    148,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     72,  44, 245,  58, 112, 216, 213, 231,
    145,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,  17,   0,   0,   0,
      0,   0,   1,   0,   8,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    121,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    120,   0,   0,   0,   3,   0,   1,   0,
    132,   0,   0,   0,   2,   0,   1,   0,
    105, 100,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 105, 109, 101, 115, 116,  97, 109,
    112,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 101,  99, 118,  84, 105, 109, 101,
    115, 116,  97, 109, 112,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    118,  97, 108, 117, 101,   0,   0,   0,
    111, 112, 101, 114,  97, 116, 105, 111,
    110,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
     82,  92, 250, 161,   9,   0, 167, 235,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_93ec636d3aa9ee4a = b_93ec636d3aa9ee4a.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_93ec636d3aa9ee4a[] = {
  &s_e7d5d8703af52c48,
  &s_eba70009a1fa5c52,
};
static const uint16_t m_93ec636d3aa9ee4a[] = {0, 4, 2, 1, 3};
static const uint16_t i_93ec636d3aa9ee4a[] = {0, 1, 2, 3, 4};
const ::capnp::_::RawSchema s_93ec636d3aa9ee4a = {
  0x93ec636d3aa9ee4a, b_93ec636d3aa9ee4a.words, 92, d_93ec636d3aa9ee4a, m_93ec636d3aa9ee4a,
  2, 5, i_93ec636d3aa9ee4a, nullptr, nullptr, { &s_93ec636d3aa9ee4a, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<27> b_eba70009a1fa5c52 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     82,  92, 250, 161,   9,   0, 167, 235,
     29,   0,   0,   0,   2,   0,   0,   0,
     74, 238, 169,  58, 109,  99, 236, 147,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  18,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  55,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 114,  99,  47,  99, 104,  49,  52,
     47,  99,  97, 112, 110, 112,  47, 116,
     97, 103,  46,  99,  97, 112, 110, 112,
     58,  84,  97, 103,  46,  84, 121, 112,
    101,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   1,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 101,  97, 100,   0,   0,   0,   0,
    119, 114, 105, 116, 101,   0,   0,   0, }
};
::capnp::word const* const bp_eba70009a1fa5c52 = b_eba70009a1fa5c52.words;
#if !CAPNP_LITE
static const uint16_t m_eba70009a1fa5c52[] = {0, 1};
const ::capnp::_::RawSchema s_eba70009a1fa5c52 = {
  0xeba70009a1fa5c52, b_eba70009a1fa5c52.words, 27, nullptr, m_eba70009a1fa5c52,
  0, 2, nullptr, nullptr, nullptr, { &s_eba70009a1fa5c52, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
CAPNP_DEFINE_ENUM(Type_eba70009a1fa5c52, eba70009a1fa5c52);
static const ::capnp::_::AlignedData<97> b_e7d5d8703af52c48 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     72,  44, 245,  58, 112, 216, 213, 231,
     29,   0,   0,   0,   1,   0,   5,   0,
     74, 238, 169,  58, 109,  99, 236, 147,
      1,   0,   7,   0,   1,   0,   5,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  26,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  31,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 114,  99,  47,  99, 104,  49,  52,
     47,  99,  97, 112, 110, 112,  47, 116,
     97, 103,  46,  99,  97, 112, 110, 112,
     58,  84,  97, 103,  46, 118,  97, 108,
    117, 101,   0,   0,   0,   0,   0,   0,
     20,   0,   0,   0,   3,   0,   4,   0,
      0,   0, 255, 255,   3,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    125,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    120,   0,   0,   0,   3,   0,   1,   0,
    132,   0,   0,   0,   2,   0,   1,   0,
      1,   0, 254, 255,   3,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    129,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    124,   0,   0,   0,   3,   0,   1,   0,
    136,   0,   0,   0,   2,   0,   1,   0,
      2,   0, 253, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   5,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    133,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    128,   0,   0,   0,   3,   0,   1,   0,
    140,   0,   0,   0,   2,   0,   1,   0,
      3,   0, 252, 255, 192,   0,   0,   0,
      0,   0,   1,   0,   6,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    137,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    132,   0,   0,   0,   3,   0,   1,   0,
    144,   0,   0,   0,   2,   0,   1,   0,
      4,   0, 251, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    141,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    136,   0,   0,   0,   3,   0,   1,   0,
    164,   0,   0,   0,   2,   0,   1,   0,
    105, 110, 116,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 111, 117,  98, 108, 101,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 116, 114, 105, 110, 103,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     98, 111, 111, 108,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108, 105, 115, 116,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_e7d5d8703af52c48 = b_e7d5d8703af52c48.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_e7d5d8703af52c48[] = {
  &s_93ec636d3aa9ee4a,
};
static const uint16_t m_e7d5d8703af52c48[] = {3, 1, 0, 4, 2};
static const uint16_t i_e7d5d8703af52c48[] = {0, 1, 2, 3, 4};
const ::capnp::_::RawSchema s_e7d5d8703af52c48 = {
  0xe7d5d8703af52c48, b_e7d5d8703af52c48.words, 97, d_e7d5d8703af52c48, m_e7d5d8703af52c48,
  1, 5, i_e7d5d8703af52c48, nullptr, nullptr, { &s_e7d5d8703af52c48, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================

namespace our_system {
namespace capnp {

// Tag
constexpr uint16_t Tag::_capnpPrivate::dataWordSize;
constexpr uint16_t Tag::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Tag::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Tag::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Tag::Value
constexpr uint16_t Tag::Value::_capnpPrivate::dataWordSize;
constexpr uint16_t Tag::Value::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Tag::Value::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Tag::Value::_capnpPrivate::schema;
#endif  // !CAPNP_LITE


}  // namespace
}  // namespace
